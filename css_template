/* 

Two Main Principles of OOCSS
Separate structure and skin
This means to define repeating visual features (like background and border styles) 
as separate “skins” that you can mix-and-match with your various objects to achieve 
a large amount of visual variety without much code. See the module object and its skins.

Separating structure and skin can also mean using classes to name your objects and 
their components, rather than relying solely on the semantics of HTML. For example, 
the media object is named with class="media", and its components are named with 
class="img" (for the image/video component) and class="bd" (for the body/text component).

By referencing these classes in your stylesheets (say, rather than directly styling the <img> element), 
your HTML can be flexible. For instance, if a new media element were to take off in the next few years 
(e.g. <svg>), it could be integrated into the HTML without having to touch the CSS.

Separate container and content
Essentially, this means “rarely use location-dependent styles”. An object should 
look the same no matter where you put it. So instead of styling a specific <h2> 
with .myObject h2 {...}, create and apply a class that describes the <h2> 
in question, like <h2 class="category">.

This gives you the assurance that: (1) all unclassed <h2>s will look the same; 
(2) all elements with the category class (called a mixin) will look the same; 
and 3) you won’t need to create an override style for the case when you 
actually do want .myObject h2 to look like the normal <h2>.

*/

/* Reset */

	html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
		margin: 0;
		padding: 0;
		border: 0;
		font-size: 100%;
		font: inherit;
		vertical-align: baseline;
	}

	article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
		display: block;
	}

	body {
		line-height: 1;
	}

	ol, ul {
		list-style: none;
	}

	blockquote, q {
		quotes: none;
	}

	blockquote:before, blockquote:after, q:before, q:after {
		content: '';
		content: none;
	}

	table {
		border-collapse: collapse;
		border-spacing: 0;
	}

	body {
		-webkit-text-size-adjust: none;
	}


	
	/* ---------------------------------------------- mobile */
	
	/* HEADER */
	header{

	}

	/* NAV */
	nav{

	}

	/* ARTICLE */
	article{

	}

	/* SECTION */
	section{

	}

	/* ASIDE */
	aside{

	}

	/* FOOTER */
	footer {

	}

	/* TABLE */
	table{

	}

	tr{

	}

	td{

	}
					
		/* ---------------------------------------------- structures */

					
		/* ---------------------------------------------- styles */

		
		
/* -------------------------- tablet --------------------------- */
@media screen and (min-width : 600px) and (max-width : 899px) {
  body{
    background-color: red;
  }
}
/* -------------------------- laptop--------------------------- */
@media screen and (min-width : 900px) and (max-width : 1199px) {
  body{
    background-color: yellow;
  }
}
/* -------------------------- desktop --------------------------- */
@media screen and (min-width : 1200px) and (max-width : 1800px) {
  body{
    background-color: blue;
  }
}
